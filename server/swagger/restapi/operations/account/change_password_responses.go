// Code generated by go-swagger; DO NOT EDIT.

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"quocbang/swagger-microservices/swagger/models"
)

// ChangePasswordOKCode is the HTTP code returned for type ChangePasswordOK
const ChangePasswordOKCode int = 200

/*ChangePasswordOK OK

swagger:response changePasswordOK
*/
type ChangePasswordOK struct {
}

// NewChangePasswordOK creates ChangePasswordOK with default headers values
func NewChangePasswordOK() *ChangePasswordOK {

	return &ChangePasswordOK{}
}

// WriteResponse to the client
func (o *ChangePasswordOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

/*ChangePasswordDefault Unexpected error

swagger:response changePasswordDefault
*/
type ChangePasswordDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewChangePasswordDefault creates ChangePasswordDefault with default headers values
func NewChangePasswordDefault(code int) *ChangePasswordDefault {
	if code <= 0 {
		code = 500
	}

	return &ChangePasswordDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the change password default response
func (o *ChangePasswordDefault) WithStatusCode(code int) *ChangePasswordDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the change password default response
func (o *ChangePasswordDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the change password default response
func (o *ChangePasswordDefault) WithPayload(payload *models.Error) *ChangePasswordDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the change password default response
func (o *ChangePasswordDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ChangePasswordDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
